<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="EstiloBotonMorado" TargetType="Button">
        <Setter Property="Background" Value="#D1B2FF" />
        <!-- Morado claro -->
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="#A06BB5" />
        <!-- Borde morado oscuro -->
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="50" />
        <!-- Crear bordes cuadrados inicialmente -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0">
                        <!-- Borde cuadrado por defecto -->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Definir los disparadores (Triggers) -->
        <Style.Triggers>
            <!-- Cambiar a ovalado al pasar el mouse -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="25">
                                <!-- Borde redondeado para hacerlo ovalado -->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <!-- Al hacer clic, mantener la forma ovalada pero cambiar el color -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#7B41A9" />
                <!-- Morado oscuro al hacer clic -->
            </Trigger>
        </Style.Triggers>
    </Style>





    <!--ESTILOS PRINCIPALES-->


    <Style x:Key="ButtonBaseStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <!-- Template va fuera de los Setters -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="150" Height="40" CornerRadius="9" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilo de Botón Ingresar -->
    <Style x:Key="LoginButtonStyle" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="Button">
        <Setter Property="Background" Value="#462AD8"/>
        <!-- Triggers van después de los Setters -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#28AEED"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo de Botón Minimizar -->
    <Style x:Key="MinimizeButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#28AEED"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18" CornerRadius="9" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Triggers después de Setters -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#278BEF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo de Botón Cerrar -->
    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#DA34AE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="18" Height="18" CornerRadius="9" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Triggers después de Setters -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#C62DAE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>